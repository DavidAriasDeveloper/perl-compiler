Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    OR
    AND
    NOT
    UNTIL
    FOR
    FOREACH
    LAST
    NEXT
    CONTINUE
    RETURN
    GROSSARROW
    LBRACKET
    RBRACKET
    AMPERSANT

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> USE ID SEMICOLON
Rule 5     declaration -> PACKAGE ID SEMICOLON
Rule 6     declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK
Rule 7     declaration -> MY var_type SEMICOLON
Rule 8     declaration -> MY var_type assign_type expression SEMICOLON
Rule 9     declaration -> MY LPAREN param_list RPAREN SEMICOLON
Rule 10    declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON
Rule 11    param_list -> var_type comma_var_type
Rule 12    param_list -> empty
Rule 13    comma_var_type -> comma_var_type COMMA var_type
Rule 14    comma_var_type -> COMMA var_type
Rule 15    comma_var_type -> empty
Rule 16    var_type -> DOLLAR ID
Rule 17    var_type -> AT ID
Rule 18    var_type -> PERCENT ID
Rule 19    assign_type -> ASSIGN
Rule 20    assign_type -> PLUS_ASSIGN
Rule 21    assign_type -> MINUS_ASSIGN
Rule 22    assign_type -> MULTIPLY_ASSIGN
Rule 23    assign_type -> DIVIDE_ASSIGN
Rule 24    assign_type -> MOD_ASSIGN
Rule 25    assign_type -> POW_ASSIGN
Rule 26    statement_list -> statement_list statement SEMICOLON
Rule 27    statement_list -> statement SEMICOLON
Rule 28    statement_list -> empty
Rule 29    statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
Rule 30    statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
Rule 31    statement -> PRINT STRING
Rule 32    statement -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
Rule 33    expression_list -> expression_listitems comma_expression
Rule 34    expression_list -> comma_expression
Rule 35    expression_list -> empty
Rule 36    expression_listitems -> expression_listitems comma_expression
Rule 37    expression_listitems -> expression
Rule 38    comma_expression -> COMMA expression
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression MODULUS expression
Rule 44    expression -> INTEGER
Rule 45    expression -> HEX
Rule 46    expression -> FLOAT
Rule 47    expression -> STRING
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    expression -> ID LPAREN expression_list RPAREN
Rule 50    expression -> var_type
Rule 51    expression -> MINUS expression
Rule 52    expression -> PLUS expression
Rule 53    relop -> relop_number
Rule 54    relop -> relop_string
Rule 55    relop_number -> ISEQUAL
Rule 56    relop_number -> NOTEQUAL
Rule 57    relop_number -> GREATER
Rule 58    relop_number -> GREATEREQUAL
Rule 59    relop_number -> LESS
Rule 60    relop_number -> LESSEQUAL
Rule 61    relop_number -> COMP
Rule 62    relop_string -> ISEQUAL_STRING
Rule 63    relop_string -> NOTEQUAL_STRING
Rule 64    relop_string -> GREATER_STRING
Rule 65    relop_string -> GREATEREQUAL_STRING
Rule 66    relop_string -> LESS_STRING
Rule 67    relop_string -> LESSEQUAL_STRING
Rule 68    relop_string -> COMP_STRING
Rule 69    empty -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 
AND                  : 
ASSIGN               : 19
AT                   : 17
COMMA                : 13 14 38
COMP                 : 61
COMP_STRING          : 68
CONTINUE             : 
DIVIDE               : 42
DIVIDE_ASSIGN        : 23
DOLLAR               : 16
ELSE                 : 30
FLOAT                : 46
FOR                  : 
FOREACH              : 
GREATER              : 57
GREATEREQUAL         : 58
GREATEREQUAL_STRING  : 65
GREATER_STRING       : 64
GROSSARROW           : 
HEX                  : 45
ID                   : 4 5 6 16 17 18 49
IF                   : 29 30
INTEGER              : 44
ISEQUAL              : 55
ISEQUAL_STRING       : 62
LAST                 : 
LBLOCK               : 6 29 30 30 32
LBRACKET             : 
LESS                 : 59
LESSEQUAL            : 60
LESSEQUAL_STRING     : 67
LESS_STRING          : 66
LPAREN               : 6 9 10 29 30 32 48 49
MINUS                : 40 51
MINUS_ASSIGN         : 21
MODULUS              : 43
MOD_ASSIGN           : 24
MULTIPLY_ASSIGN      : 22
MY                   : 7 8 9 10
NEXT                 : 
NOT                  : 
NOTEQUAL             : 56
NOTEQUAL_STRING      : 63
OR                   : 
PACKAGE              : 5
PERCENT              : 18
PLUS                 : 39 52
PLUS_ASSIGN          : 20
POW_ASSIGN           : 25
PRINT                : 31
RBLOCK               : 6 29 30 30 32
RBRACKET             : 
RETURN               : 
RPAREN               : 6 9 10 29 30 32 48 49
SEMICOLON            : 4 5 7 8 9 10 26 27
STRING               : 31 47
SUB                  : 6
TIMES                : 41
UNTIL                : 
USE                  : 4
WHILE                : 32
error                : 

Nonterminals, with rules where they appear

assign_type          : 8 10
comma_expression     : 33 34 36
comma_var_type       : 11 13
declaration          : 2 3
declaration_list     : 1 2
empty                : 12 15 28 35
expression           : 8 10 37 38 39 39 40 40 41 41 42 42 43 43 48 51 52
expression_list      : 49
expression_listitems : 33 36
param_list           : 6 9 10
program              : 0
relop                : 29 30 32
relop_number         : 53
relop_string         : 54
statement            : 26 27
statement_list       : 6 26 29 30 30 32
var_type             : 7 8 11 13 14 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . USE ID SEMICOLON
    (5) declaration -> . PACKAGE ID SEMICOLON
    (6) declaration -> . SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK
    (7) declaration -> . MY var_type SEMICOLON
    (8) declaration -> . MY var_type assign_type expression SEMICOLON
    (9) declaration -> . MY LPAREN param_list RPAREN SEMICOLON
    (10) declaration -> . MY LPAREN param_list RPAREN assign_type expression SEMICOLON

    USE             shift and go to state 4
    PACKAGE         shift and go to state 5
    SUB             shift and go to state 6
    MY              shift and go to state 7

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . USE ID SEMICOLON
    (5) declaration -> . PACKAGE ID SEMICOLON
    (6) declaration -> . SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK
    (7) declaration -> . MY var_type SEMICOLON
    (8) declaration -> . MY var_type assign_type expression SEMICOLON
    (9) declaration -> . MY LPAREN param_list RPAREN SEMICOLON
    (10) declaration -> . MY LPAREN param_list RPAREN assign_type expression SEMICOLON

    $end            reduce using rule 1 (program -> declaration_list .)
    USE             shift and go to state 4
    PACKAGE         shift and go to state 5
    SUB             shift and go to state 6
    MY              shift and go to state 7

    declaration                    shift and go to state 8

state 3

    (3) declaration_list -> declaration .

    USE             reduce using rule 3 (declaration_list -> declaration .)
    PACKAGE         reduce using rule 3 (declaration_list -> declaration .)
    SUB             reduce using rule 3 (declaration_list -> declaration .)
    MY              reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> USE . ID SEMICOLON

    ID              shift and go to state 9


state 5

    (5) declaration -> PACKAGE . ID SEMICOLON

    ID              shift and go to state 10


state 6

    (6) declaration -> SUB . ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK

    ID              shift and go to state 11


state 7

    (7) declaration -> MY . var_type SEMICOLON
    (8) declaration -> MY . var_type assign_type expression SEMICOLON
    (9) declaration -> MY . LPAREN param_list RPAREN SEMICOLON
    (10) declaration -> MY . LPAREN param_list RPAREN assign_type expression SEMICOLON
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    LPAREN          shift and go to state 13
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    var_type                       shift and go to state 12

state 8

    (2) declaration_list -> declaration_list declaration .

    USE             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PACKAGE         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SUB             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    MY              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 9

    (4) declaration -> USE ID . SEMICOLON

    SEMICOLON       shift and go to state 17


state 10

    (5) declaration -> PACKAGE ID . SEMICOLON

    SEMICOLON       shift and go to state 18


state 11

    (6) declaration -> SUB ID . LPAREN param_list RPAREN LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 19


state 12

    (7) declaration -> MY var_type . SEMICOLON
    (8) declaration -> MY var_type . assign_type expression SEMICOLON
    (19) assign_type -> . ASSIGN
    (20) assign_type -> . PLUS_ASSIGN
    (21) assign_type -> . MINUS_ASSIGN
    (22) assign_type -> . MULTIPLY_ASSIGN
    (23) assign_type -> . DIVIDE_ASSIGN
    (24) assign_type -> . MOD_ASSIGN
    (25) assign_type -> . POW_ASSIGN

    SEMICOLON       shift and go to state 20
    ASSIGN          shift and go to state 22
    PLUS_ASSIGN     shift and go to state 23
    MINUS_ASSIGN    shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    MOD_ASSIGN      shift and go to state 27
    POW_ASSIGN      shift and go to state 28

    assign_type                    shift and go to state 21

state 13

    (9) declaration -> MY LPAREN . param_list RPAREN SEMICOLON
    (10) declaration -> MY LPAREN . param_list RPAREN assign_type expression SEMICOLON
    (11) param_list -> . var_type comma_var_type
    (12) param_list -> . empty
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID
    (69) empty -> .

    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16
    RPAREN          reduce using rule 69 (empty -> .)

    param_list                     shift and go to state 29
    var_type                       shift and go to state 30
    empty                          shift and go to state 31

state 14

    (16) var_type -> DOLLAR . ID

    ID              shift and go to state 32


state 15

    (17) var_type -> AT . ID

    ID              shift and go to state 33


state 16

    (18) var_type -> PERCENT . ID

    ID              shift and go to state 34


state 17

    (4) declaration -> USE ID SEMICOLON .

    USE             reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    PACKAGE         reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    SUB             reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    MY              reduce using rule 4 (declaration -> USE ID SEMICOLON .)
    $end            reduce using rule 4 (declaration -> USE ID SEMICOLON .)


state 18

    (5) declaration -> PACKAGE ID SEMICOLON .

    USE             reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    PACKAGE         reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    SUB             reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    MY              reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)
    $end            reduce using rule 5 (declaration -> PACKAGE ID SEMICOLON .)


state 19

    (6) declaration -> SUB ID LPAREN . param_list RPAREN LBLOCK statement_list RBLOCK
    (11) param_list -> . var_type comma_var_type
    (12) param_list -> . empty
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID
    (69) empty -> .

    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16
    RPAREN          reduce using rule 69 (empty -> .)

    param_list                     shift and go to state 35
    var_type                       shift and go to state 30
    empty                          shift and go to state 31

state 20

    (7) declaration -> MY var_type SEMICOLON .

    USE             reduce using rule 7 (declaration -> MY var_type SEMICOLON .)
    PACKAGE         reduce using rule 7 (declaration -> MY var_type SEMICOLON .)
    SUB             reduce using rule 7 (declaration -> MY var_type SEMICOLON .)
    MY              reduce using rule 7 (declaration -> MY var_type SEMICOLON .)
    $end            reduce using rule 7 (declaration -> MY var_type SEMICOLON .)


state 21

    (8) declaration -> MY var_type assign_type . expression SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    var_type                       shift and go to state 36
    expression                     shift and go to state 37

state 22

    (19) assign_type -> ASSIGN .

    INTEGER         reduce using rule 19 (assign_type -> ASSIGN .)
    HEX             reduce using rule 19 (assign_type -> ASSIGN .)
    FLOAT           reduce using rule 19 (assign_type -> ASSIGN .)
    STRING          reduce using rule 19 (assign_type -> ASSIGN .)
    LPAREN          reduce using rule 19 (assign_type -> ASSIGN .)
    ID              reduce using rule 19 (assign_type -> ASSIGN .)
    MINUS           reduce using rule 19 (assign_type -> ASSIGN .)
    PLUS            reduce using rule 19 (assign_type -> ASSIGN .)
    DOLLAR          reduce using rule 19 (assign_type -> ASSIGN .)
    AT              reduce using rule 19 (assign_type -> ASSIGN .)
    PERCENT         reduce using rule 19 (assign_type -> ASSIGN .)


state 23

    (20) assign_type -> PLUS_ASSIGN .

    INTEGER         reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    HEX             reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    FLOAT           reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    STRING          reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    LPAREN          reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    ID              reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    MINUS           reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    PLUS            reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    DOLLAR          reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    AT              reduce using rule 20 (assign_type -> PLUS_ASSIGN .)
    PERCENT         reduce using rule 20 (assign_type -> PLUS_ASSIGN .)


state 24

    (21) assign_type -> MINUS_ASSIGN .

    INTEGER         reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    HEX             reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    FLOAT           reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    STRING          reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    LPAREN          reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    ID              reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    MINUS           reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    PLUS            reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    DOLLAR          reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    AT              reduce using rule 21 (assign_type -> MINUS_ASSIGN .)
    PERCENT         reduce using rule 21 (assign_type -> MINUS_ASSIGN .)


state 25

    (22) assign_type -> MULTIPLY_ASSIGN .

    INTEGER         reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    HEX             reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    FLOAT           reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    STRING          reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    LPAREN          reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    ID              reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    MINUS           reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    PLUS            reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    DOLLAR          reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    AT              reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)
    PERCENT         reduce using rule 22 (assign_type -> MULTIPLY_ASSIGN .)


state 26

    (23) assign_type -> DIVIDE_ASSIGN .

    INTEGER         reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    HEX             reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    FLOAT           reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    LPAREN          reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    ID              reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    MINUS           reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    PLUS            reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    DOLLAR          reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    AT              reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)
    PERCENT         reduce using rule 23 (assign_type -> DIVIDE_ASSIGN .)


state 27

    (24) assign_type -> MOD_ASSIGN .

    INTEGER         reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    HEX             reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    FLOAT           reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    STRING          reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    LPAREN          reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    ID              reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    MINUS           reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    PLUS            reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    DOLLAR          reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    AT              reduce using rule 24 (assign_type -> MOD_ASSIGN .)
    PERCENT         reduce using rule 24 (assign_type -> MOD_ASSIGN .)


state 28

    (25) assign_type -> POW_ASSIGN .

    INTEGER         reduce using rule 25 (assign_type -> POW_ASSIGN .)
    HEX             reduce using rule 25 (assign_type -> POW_ASSIGN .)
    FLOAT           reduce using rule 25 (assign_type -> POW_ASSIGN .)
    STRING          reduce using rule 25 (assign_type -> POW_ASSIGN .)
    LPAREN          reduce using rule 25 (assign_type -> POW_ASSIGN .)
    ID              reduce using rule 25 (assign_type -> POW_ASSIGN .)
    MINUS           reduce using rule 25 (assign_type -> POW_ASSIGN .)
    PLUS            reduce using rule 25 (assign_type -> POW_ASSIGN .)
    DOLLAR          reduce using rule 25 (assign_type -> POW_ASSIGN .)
    AT              reduce using rule 25 (assign_type -> POW_ASSIGN .)
    PERCENT         reduce using rule 25 (assign_type -> POW_ASSIGN .)


state 29

    (9) declaration -> MY LPAREN param_list . RPAREN SEMICOLON
    (10) declaration -> MY LPAREN param_list . RPAREN assign_type expression SEMICOLON

    RPAREN          shift and go to state 46


state 30

    (11) param_list -> var_type . comma_var_type
    (13) comma_var_type -> . comma_var_type COMMA var_type
    (14) comma_var_type -> . COMMA var_type
    (15) comma_var_type -> . empty
    (69) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 48
    RPAREN          reduce using rule 69 (empty -> .)

  ! COMMA           [ reduce using rule 69 (empty -> .) ]

    comma_var_type                 shift and go to state 47
    empty                          shift and go to state 49

state 31

    (12) param_list -> empty .

    RPAREN          reduce using rule 12 (param_list -> empty .)


state 32

    (16) var_type -> DOLLAR ID .

    SEMICOLON       reduce using rule 16 (var_type -> DOLLAR ID .)
    ASSIGN          reduce using rule 16 (var_type -> DOLLAR ID .)
    PLUS_ASSIGN     reduce using rule 16 (var_type -> DOLLAR ID .)
    MINUS_ASSIGN    reduce using rule 16 (var_type -> DOLLAR ID .)
    MULTIPLY_ASSIGN reduce using rule 16 (var_type -> DOLLAR ID .)
    DIVIDE_ASSIGN   reduce using rule 16 (var_type -> DOLLAR ID .)
    MOD_ASSIGN      reduce using rule 16 (var_type -> DOLLAR ID .)
    POW_ASSIGN      reduce using rule 16 (var_type -> DOLLAR ID .)
    COMMA           reduce using rule 16 (var_type -> DOLLAR ID .)
    RPAREN          reduce using rule 16 (var_type -> DOLLAR ID .)
    PLUS            reduce using rule 16 (var_type -> DOLLAR ID .)
    MINUS           reduce using rule 16 (var_type -> DOLLAR ID .)
    TIMES           reduce using rule 16 (var_type -> DOLLAR ID .)
    DIVIDE          reduce using rule 16 (var_type -> DOLLAR ID .)
    MODULUS         reduce using rule 16 (var_type -> DOLLAR ID .)


state 33

    (17) var_type -> AT ID .

    SEMICOLON       reduce using rule 17 (var_type -> AT ID .)
    ASSIGN          reduce using rule 17 (var_type -> AT ID .)
    PLUS_ASSIGN     reduce using rule 17 (var_type -> AT ID .)
    MINUS_ASSIGN    reduce using rule 17 (var_type -> AT ID .)
    MULTIPLY_ASSIGN reduce using rule 17 (var_type -> AT ID .)
    DIVIDE_ASSIGN   reduce using rule 17 (var_type -> AT ID .)
    MOD_ASSIGN      reduce using rule 17 (var_type -> AT ID .)
    POW_ASSIGN      reduce using rule 17 (var_type -> AT ID .)
    COMMA           reduce using rule 17 (var_type -> AT ID .)
    RPAREN          reduce using rule 17 (var_type -> AT ID .)
    PLUS            reduce using rule 17 (var_type -> AT ID .)
    MINUS           reduce using rule 17 (var_type -> AT ID .)
    TIMES           reduce using rule 17 (var_type -> AT ID .)
    DIVIDE          reduce using rule 17 (var_type -> AT ID .)
    MODULUS         reduce using rule 17 (var_type -> AT ID .)


state 34

    (18) var_type -> PERCENT ID .

    SEMICOLON       reduce using rule 18 (var_type -> PERCENT ID .)
    ASSIGN          reduce using rule 18 (var_type -> PERCENT ID .)
    PLUS_ASSIGN     reduce using rule 18 (var_type -> PERCENT ID .)
    MINUS_ASSIGN    reduce using rule 18 (var_type -> PERCENT ID .)
    MULTIPLY_ASSIGN reduce using rule 18 (var_type -> PERCENT ID .)
    DIVIDE_ASSIGN   reduce using rule 18 (var_type -> PERCENT ID .)
    MOD_ASSIGN      reduce using rule 18 (var_type -> PERCENT ID .)
    POW_ASSIGN      reduce using rule 18 (var_type -> PERCENT ID .)
    COMMA           reduce using rule 18 (var_type -> PERCENT ID .)
    RPAREN          reduce using rule 18 (var_type -> PERCENT ID .)
    PLUS            reduce using rule 18 (var_type -> PERCENT ID .)
    MINUS           reduce using rule 18 (var_type -> PERCENT ID .)
    TIMES           reduce using rule 18 (var_type -> PERCENT ID .)
    DIVIDE          reduce using rule 18 (var_type -> PERCENT ID .)
    MODULUS         reduce using rule 18 (var_type -> PERCENT ID .)


state 35

    (6) declaration -> SUB ID LPAREN param_list . RPAREN LBLOCK statement_list RBLOCK

    RPAREN          shift and go to state 50


state 36

    (50) expression -> var_type .

    SEMICOLON       reduce using rule 50 (expression -> var_type .)
    PLUS            reduce using rule 50 (expression -> var_type .)
    MINUS           reduce using rule 50 (expression -> var_type .)
    TIMES           reduce using rule 50 (expression -> var_type .)
    DIVIDE          reduce using rule 50 (expression -> var_type .)
    MODULUS         reduce using rule 50 (expression -> var_type .)
    RPAREN          reduce using rule 50 (expression -> var_type .)
    COMMA           reduce using rule 50 (expression -> var_type .)


state 37

    (8) declaration -> MY var_type assign_type expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULUS         shift and go to state 56


state 38

    (52) expression -> PLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 57
    var_type                       shift and go to state 36

state 39

    (51) expression -> MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 58
    var_type                       shift and go to state 36

state 40

    (44) expression -> INTEGER .

    SEMICOLON       reduce using rule 44 (expression -> INTEGER .)
    PLUS            reduce using rule 44 (expression -> INTEGER .)
    MINUS           reduce using rule 44 (expression -> INTEGER .)
    TIMES           reduce using rule 44 (expression -> INTEGER .)
    DIVIDE          reduce using rule 44 (expression -> INTEGER .)
    MODULUS         reduce using rule 44 (expression -> INTEGER .)
    RPAREN          reduce using rule 44 (expression -> INTEGER .)
    COMMA           reduce using rule 44 (expression -> INTEGER .)


state 41

    (45) expression -> HEX .

    SEMICOLON       reduce using rule 45 (expression -> HEX .)
    PLUS            reduce using rule 45 (expression -> HEX .)
    MINUS           reduce using rule 45 (expression -> HEX .)
    TIMES           reduce using rule 45 (expression -> HEX .)
    DIVIDE          reduce using rule 45 (expression -> HEX .)
    MODULUS         reduce using rule 45 (expression -> HEX .)
    RPAREN          reduce using rule 45 (expression -> HEX .)
    COMMA           reduce using rule 45 (expression -> HEX .)


state 42

    (46) expression -> FLOAT .

    SEMICOLON       reduce using rule 46 (expression -> FLOAT .)
    PLUS            reduce using rule 46 (expression -> FLOAT .)
    MINUS           reduce using rule 46 (expression -> FLOAT .)
    TIMES           reduce using rule 46 (expression -> FLOAT .)
    DIVIDE          reduce using rule 46 (expression -> FLOAT .)
    MODULUS         reduce using rule 46 (expression -> FLOAT .)
    RPAREN          reduce using rule 46 (expression -> FLOAT .)
    COMMA           reduce using rule 46 (expression -> FLOAT .)


state 43

    (47) expression -> STRING .

    SEMICOLON       reduce using rule 47 (expression -> STRING .)
    PLUS            reduce using rule 47 (expression -> STRING .)
    MINUS           reduce using rule 47 (expression -> STRING .)
    TIMES           reduce using rule 47 (expression -> STRING .)
    DIVIDE          reduce using rule 47 (expression -> STRING .)
    MODULUS         reduce using rule 47 (expression -> STRING .)
    RPAREN          reduce using rule 47 (expression -> STRING .)
    COMMA           reduce using rule 47 (expression -> STRING .)


state 44

    (48) expression -> LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 59
    var_type                       shift and go to state 36

state 45

    (49) expression -> ID . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 60


state 46

    (9) declaration -> MY LPAREN param_list RPAREN . SEMICOLON
    (10) declaration -> MY LPAREN param_list RPAREN . assign_type expression SEMICOLON
    (19) assign_type -> . ASSIGN
    (20) assign_type -> . PLUS_ASSIGN
    (21) assign_type -> . MINUS_ASSIGN
    (22) assign_type -> . MULTIPLY_ASSIGN
    (23) assign_type -> . DIVIDE_ASSIGN
    (24) assign_type -> . MOD_ASSIGN
    (25) assign_type -> . POW_ASSIGN

    SEMICOLON       shift and go to state 61
    ASSIGN          shift and go to state 22
    PLUS_ASSIGN     shift and go to state 23
    MINUS_ASSIGN    shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    MOD_ASSIGN      shift and go to state 27
    POW_ASSIGN      shift and go to state 28

    assign_type                    shift and go to state 62

state 47

    (11) param_list -> var_type comma_var_type .
    (13) comma_var_type -> comma_var_type . COMMA var_type

    RPAREN          reduce using rule 11 (param_list -> var_type comma_var_type .)
    COMMA           shift and go to state 63


state 48

    (14) comma_var_type -> COMMA . var_type
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    var_type                       shift and go to state 64

state 49

    (15) comma_var_type -> empty .

    COMMA           reduce using rule 15 (comma_var_type -> empty .)
    RPAREN          reduce using rule 15 (comma_var_type -> empty .)


state 50

    (6) declaration -> SUB ID LPAREN param_list RPAREN . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 65


state 51

    (8) declaration -> MY var_type assign_type expression SEMICOLON .

    USE             reduce using rule 8 (declaration -> MY var_type assign_type expression SEMICOLON .)
    PACKAGE         reduce using rule 8 (declaration -> MY var_type assign_type expression SEMICOLON .)
    SUB             reduce using rule 8 (declaration -> MY var_type assign_type expression SEMICOLON .)
    MY              reduce using rule 8 (declaration -> MY var_type assign_type expression SEMICOLON .)
    $end            reduce using rule 8 (declaration -> MY var_type assign_type expression SEMICOLON .)


state 52

    (39) expression -> expression PLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 66
    var_type                       shift and go to state 36

state 53

    (40) expression -> expression MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 67
    var_type                       shift and go to state 36

state 54

    (41) expression -> expression TIMES . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 68
    var_type                       shift and go to state 36

state 55

    (42) expression -> expression DIVIDE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 69
    var_type                       shift and go to state 36

state 56

    (43) expression -> expression MODULUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 70
    var_type                       shift and go to state 36

state 57

    (52) expression -> PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 52 (expression -> PLUS expression .)
    PLUS            reduce using rule 52 (expression -> PLUS expression .)
    MINUS           reduce using rule 52 (expression -> PLUS expression .)
    TIMES           reduce using rule 52 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 52 (expression -> PLUS expression .)
    MODULUS         reduce using rule 52 (expression -> PLUS expression .)
    RPAREN          reduce using rule 52 (expression -> PLUS expression .)
    COMMA           reduce using rule 52 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 56 ]


state 58

    (51) expression -> MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 51 (expression -> MINUS expression .)
    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    TIMES           reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    MODULUS         reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    COMMA           reduce using rule 51 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 56 ]


state 59

    (48) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    RPAREN          shift and go to state 71
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULUS         shift and go to state 56


state 60

    (49) expression -> ID LPAREN . expression_list RPAREN
    (33) expression_list -> . expression_listitems comma_expression
    (34) expression_list -> . comma_expression
    (35) expression_list -> . empty
    (36) expression_listitems -> . expression_listitems comma_expression
    (37) expression_listitems -> . expression
    (38) comma_expression -> . COMMA expression
    (69) empty -> .
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    COMMA           shift and go to state 77
    RPAREN          reduce using rule 69 (empty -> .)
    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression_list                shift and go to state 72
    expression_listitems           shift and go to state 73
    comma_expression               shift and go to state 74
    empty                          shift and go to state 75
    expression                     shift and go to state 76
    var_type                       shift and go to state 36

state 61

    (9) declaration -> MY LPAREN param_list RPAREN SEMICOLON .

    USE             reduce using rule 9 (declaration -> MY LPAREN param_list RPAREN SEMICOLON .)
    PACKAGE         reduce using rule 9 (declaration -> MY LPAREN param_list RPAREN SEMICOLON .)
    SUB             reduce using rule 9 (declaration -> MY LPAREN param_list RPAREN SEMICOLON .)
    MY              reduce using rule 9 (declaration -> MY LPAREN param_list RPAREN SEMICOLON .)
    $end            reduce using rule 9 (declaration -> MY LPAREN param_list RPAREN SEMICOLON .)


state 62

    (10) declaration -> MY LPAREN param_list RPAREN assign_type . expression SEMICOLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 78
    var_type                       shift and go to state 36

state 63

    (13) comma_var_type -> comma_var_type COMMA . var_type
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    var_type                       shift and go to state 79

state 64

    (14) comma_var_type -> COMMA var_type .

    COMMA           reduce using rule 14 (comma_var_type -> COMMA var_type .)
    RPAREN          reduce using rule 14 (comma_var_type -> COMMA var_type .)


state 65

    (6) declaration -> SUB ID LPAREN param_list RPAREN LBLOCK . statement_list RBLOCK
    (26) statement_list -> . statement_list statement SEMICOLON
    (27) statement_list -> . statement SEMICOLON
    (28) statement_list -> . empty
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (69) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85
    RBLOCK          reduce using rule 69 (empty -> .)

  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! PRINT           [ reduce using rule 69 (empty -> .) ]
  ! WHILE           [ reduce using rule 69 (empty -> .) ]

    statement_list                 shift and go to state 80
    statement                      shift and go to state 81
    empty                          shift and go to state 82

state 66

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 39 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 39 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 39 (expression -> expression PLUS expression .)
    MODULUS         reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 39 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! MODULUS         [ shift and go to state 56 ]


state 67

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 40 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 40 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 40 (expression -> expression MINUS expression .)
    MODULUS         reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 40 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! MODULUS         [ shift and go to state 56 ]


state 68

    (41) expression -> expression TIMES expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 41 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 41 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 41 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 41 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 41 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 56 ]


state 69

    (42) expression -> expression DIVIDE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 42 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 56 ]


state 70

    (43) expression -> expression MODULUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    SEMICOLON       reduce using rule 43 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 43 (expression -> expression MODULUS expression .)
    COMMA           reduce using rule 43 (expression -> expression MODULUS expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULUS         shift and go to state 56

  ! PLUS            [ reduce using rule 43 (expression -> expression MODULUS expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression MODULUS expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression MODULUS expression .) ]
  ! MODULUS         [ reduce using rule 43 (expression -> expression MODULUS expression .) ]


state 71

    (48) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 72

    (49) expression -> ID LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 86


state 73

    (33) expression_list -> expression_listitems . comma_expression
    (36) expression_listitems -> expression_listitems . comma_expression
    (38) comma_expression -> . COMMA expression

    COMMA           shift and go to state 77

    comma_expression               shift and go to state 87

state 74

    (34) expression_list -> comma_expression .

    RPAREN          reduce using rule 34 (expression_list -> comma_expression .)


state 75

    (35) expression_list -> empty .

    RPAREN          reduce using rule 35 (expression_list -> empty .)


state 76

    (37) expression_listitems -> expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    COMMA           reduce using rule 37 (expression_listitems -> expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULUS         shift and go to state 56


state 77

    (38) comma_expression -> COMMA . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression MODULUS expression
    (44) expression -> . INTEGER
    (45) expression -> . HEX
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . ID LPAREN expression_list RPAREN
    (50) expression -> . var_type
    (51) expression -> . MINUS expression
    (52) expression -> . PLUS expression
    (16) var_type -> . DOLLAR ID
    (17) var_type -> . AT ID
    (18) var_type -> . PERCENT ID

    INTEGER         shift and go to state 40
    HEX             shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    LPAREN          shift and go to state 44
    ID              shift and go to state 45
    MINUS           shift and go to state 39
    PLUS            shift and go to state 38
    DOLLAR          shift and go to state 14
    AT              shift and go to state 15
    PERCENT         shift and go to state 16

    expression                     shift and go to state 88
    var_type                       shift and go to state 36

state 78

    (10) declaration -> MY LPAREN param_list RPAREN assign_type expression . SEMICOLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    SEMICOLON       shift and go to state 89
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULUS         shift and go to state 56


state 79

    (13) comma_var_type -> comma_var_type COMMA var_type .

    COMMA           reduce using rule 13 (comma_var_type -> comma_var_type COMMA var_type .)
    RPAREN          reduce using rule 13 (comma_var_type -> comma_var_type COMMA var_type .)


state 80

    (6) declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list . RBLOCK
    (26) statement_list -> statement_list . statement SEMICOLON
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK

    RBLOCK          shift and go to state 90
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85

    statement                      shift and go to state 91

state 81

    (27) statement_list -> statement . SEMICOLON

    SEMICOLON       shift and go to state 92


state 82

    (28) statement_list -> empty .

    RBLOCK          reduce using rule 28 (statement_list -> empty .)
    IF              reduce using rule 28 (statement_list -> empty .)
    PRINT           reduce using rule 28 (statement_list -> empty .)
    WHILE           reduce using rule 28 (statement_list -> empty .)


state 83

    (29) statement -> IF . LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> IF . LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 93


state 84

    (31) statement -> PRINT . STRING

    STRING          shift and go to state 94


state 85

    (32) statement -> WHILE . LPAREN relop RPAREN LBLOCK statement_list RBLOCK

    LPAREN          shift and go to state 95


state 86

    (49) expression -> ID LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    MODULUS         reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 49 (expression -> ID LPAREN expression_list RPAREN .)


state 87

    (33) expression_list -> expression_listitems comma_expression .
    (36) expression_listitems -> expression_listitems comma_expression .

    RPAREN          reduce using rule 33 (expression_list -> expression_listitems comma_expression .)
    COMMA           reduce using rule 36 (expression_listitems -> expression_listitems comma_expression .)


state 88

    (38) comma_expression -> COMMA expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . MODULUS expression

    RPAREN          reduce using rule 38 (comma_expression -> COMMA expression .)
    COMMA           reduce using rule 38 (comma_expression -> COMMA expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULUS         shift and go to state 56


state 89

    (10) declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON .

    USE             reduce using rule 10 (declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON .)
    PACKAGE         reduce using rule 10 (declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON .)
    SUB             reduce using rule 10 (declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON .)
    MY              reduce using rule 10 (declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON .)
    $end            reduce using rule 10 (declaration -> MY LPAREN param_list RPAREN assign_type expression SEMICOLON .)


state 90

    (6) declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .

    USE             reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    PACKAGE         reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    SUB             reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    MY              reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)
    $end            reduce using rule 6 (declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK .)


state 91

    (26) statement_list -> statement_list statement . SEMICOLON

    SEMICOLON       shift and go to state 96


state 92

    (27) statement_list -> statement SEMICOLON .

    RBLOCK          reduce using rule 27 (statement_list -> statement SEMICOLON .)
    IF              reduce using rule 27 (statement_list -> statement SEMICOLON .)
    PRINT           reduce using rule 27 (statement_list -> statement SEMICOLON .)
    WHILE           reduce using rule 27 (statement_list -> statement SEMICOLON .)


state 93

    (29) statement -> IF LPAREN . relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> IF LPAREN . relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (53) relop -> . relop_number
    (54) relop -> . relop_string
    (55) relop_number -> . ISEQUAL
    (56) relop_number -> . NOTEQUAL
    (57) relop_number -> . GREATER
    (58) relop_number -> . GREATEREQUAL
    (59) relop_number -> . LESS
    (60) relop_number -> . LESSEQUAL
    (61) relop_number -> . COMP
    (62) relop_string -> . ISEQUAL_STRING
    (63) relop_string -> . NOTEQUAL_STRING
    (64) relop_string -> . GREATER_STRING
    (65) relop_string -> . GREATEREQUAL_STRING
    (66) relop_string -> . LESS_STRING
    (67) relop_string -> . LESSEQUAL_STRING
    (68) relop_string -> . COMP_STRING

    ISEQUAL         shift and go to state 100
    NOTEQUAL        shift and go to state 101
    GREATER         shift and go to state 102
    GREATEREQUAL    shift and go to state 103
    LESS            shift and go to state 104
    LESSEQUAL       shift and go to state 105
    COMP            shift and go to state 106
    ISEQUAL_STRING  shift and go to state 107
    NOTEQUAL_STRING shift and go to state 108
    GREATER_STRING  shift and go to state 109
    GREATEREQUAL_STRING shift and go to state 110
    LESS_STRING     shift and go to state 111
    LESSEQUAL_STRING shift and go to state 112
    COMP_STRING     shift and go to state 113

    relop                          shift and go to state 97
    relop_number                   shift and go to state 98
    relop_string                   shift and go to state 99

state 94

    (31) statement -> PRINT STRING .

    SEMICOLON       reduce using rule 31 (statement -> PRINT STRING .)


state 95

    (32) statement -> WHILE LPAREN . relop RPAREN LBLOCK statement_list RBLOCK
    (53) relop -> . relop_number
    (54) relop -> . relop_string
    (55) relop_number -> . ISEQUAL
    (56) relop_number -> . NOTEQUAL
    (57) relop_number -> . GREATER
    (58) relop_number -> . GREATEREQUAL
    (59) relop_number -> . LESS
    (60) relop_number -> . LESSEQUAL
    (61) relop_number -> . COMP
    (62) relop_string -> . ISEQUAL_STRING
    (63) relop_string -> . NOTEQUAL_STRING
    (64) relop_string -> . GREATER_STRING
    (65) relop_string -> . GREATEREQUAL_STRING
    (66) relop_string -> . LESS_STRING
    (67) relop_string -> . LESSEQUAL_STRING
    (68) relop_string -> . COMP_STRING

    ISEQUAL         shift and go to state 100
    NOTEQUAL        shift and go to state 101
    GREATER         shift and go to state 102
    GREATEREQUAL    shift and go to state 103
    LESS            shift and go to state 104
    LESSEQUAL       shift and go to state 105
    COMP            shift and go to state 106
    ISEQUAL_STRING  shift and go to state 107
    NOTEQUAL_STRING shift and go to state 108
    GREATER_STRING  shift and go to state 109
    GREATEREQUAL_STRING shift and go to state 110
    LESS_STRING     shift and go to state 111
    LESSEQUAL_STRING shift and go to state 112
    COMP_STRING     shift and go to state 113

    relop                          shift and go to state 114
    relop_number                   shift and go to state 98
    relop_string                   shift and go to state 99

state 96

    (26) statement_list -> statement_list statement SEMICOLON .

    RBLOCK          reduce using rule 26 (statement_list -> statement_list statement SEMICOLON .)
    IF              reduce using rule 26 (statement_list -> statement_list statement SEMICOLON .)
    PRINT           reduce using rule 26 (statement_list -> statement_list statement SEMICOLON .)
    WHILE           reduce using rule 26 (statement_list -> statement_list statement SEMICOLON .)


state 97

    (29) statement -> IF LPAREN relop . RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> IF LPAREN relop . RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK

    RPAREN          shift and go to state 115


state 98

    (53) relop -> relop_number .

    RPAREN          reduce using rule 53 (relop -> relop_number .)


state 99

    (54) relop -> relop_string .

    RPAREN          reduce using rule 54 (relop -> relop_string .)


state 100

    (55) relop_number -> ISEQUAL .

    RPAREN          reduce using rule 55 (relop_number -> ISEQUAL .)


state 101

    (56) relop_number -> NOTEQUAL .

    RPAREN          reduce using rule 56 (relop_number -> NOTEQUAL .)


state 102

    (57) relop_number -> GREATER .

    RPAREN          reduce using rule 57 (relop_number -> GREATER .)


state 103

    (58) relop_number -> GREATEREQUAL .

    RPAREN          reduce using rule 58 (relop_number -> GREATEREQUAL .)


state 104

    (59) relop_number -> LESS .

    RPAREN          reduce using rule 59 (relop_number -> LESS .)


state 105

    (60) relop_number -> LESSEQUAL .

    RPAREN          reduce using rule 60 (relop_number -> LESSEQUAL .)


state 106

    (61) relop_number -> COMP .

    RPAREN          reduce using rule 61 (relop_number -> COMP .)


state 107

    (62) relop_string -> ISEQUAL_STRING .

    RPAREN          reduce using rule 62 (relop_string -> ISEQUAL_STRING .)


state 108

    (63) relop_string -> NOTEQUAL_STRING .

    RPAREN          reduce using rule 63 (relop_string -> NOTEQUAL_STRING .)


state 109

    (64) relop_string -> GREATER_STRING .

    RPAREN          reduce using rule 64 (relop_string -> GREATER_STRING .)


state 110

    (65) relop_string -> GREATEREQUAL_STRING .

    RPAREN          reduce using rule 65 (relop_string -> GREATEREQUAL_STRING .)


state 111

    (66) relop_string -> LESS_STRING .

    RPAREN          reduce using rule 66 (relop_string -> LESS_STRING .)


state 112

    (67) relop_string -> LESSEQUAL_STRING .

    RPAREN          reduce using rule 67 (relop_string -> LESSEQUAL_STRING .)


state 113

    (68) relop_string -> COMP_STRING .

    RPAREN          reduce using rule 68 (relop_string -> COMP_STRING .)


state 114

    (32) statement -> WHILE LPAREN relop . RPAREN LBLOCK statement_list RBLOCK

    RPAREN          shift and go to state 116


state 115

    (29) statement -> IF LPAREN relop RPAREN . LBLOCK statement_list RBLOCK
    (30) statement -> IF LPAREN relop RPAREN . LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 117


state 116

    (32) statement -> WHILE LPAREN relop RPAREN . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 118


state 117

    (29) statement -> IF LPAREN relop RPAREN LBLOCK . statement_list RBLOCK
    (30) statement -> IF LPAREN relop RPAREN LBLOCK . statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (26) statement_list -> . statement_list statement SEMICOLON
    (27) statement_list -> . statement SEMICOLON
    (28) statement_list -> . empty
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (69) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85
    RBLOCK          reduce using rule 69 (empty -> .)

  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! PRINT           [ reduce using rule 69 (empty -> .) ]
  ! WHILE           [ reduce using rule 69 (empty -> .) ]

    statement_list                 shift and go to state 119
    statement                      shift and go to state 81
    empty                          shift and go to state 82

state 118

    (32) statement -> WHILE LPAREN relop RPAREN LBLOCK . statement_list RBLOCK
    (26) statement_list -> . statement_list statement SEMICOLON
    (27) statement_list -> . statement SEMICOLON
    (28) statement_list -> . empty
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (69) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85
    RBLOCK          reduce using rule 69 (empty -> .)

  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! PRINT           [ reduce using rule 69 (empty -> .) ]
  ! WHILE           [ reduce using rule 69 (empty -> .) ]

    statement_list                 shift and go to state 120
    statement                      shift and go to state 81
    empty                          shift and go to state 82

state 119

    (29) statement -> IF LPAREN relop RPAREN LBLOCK statement_list . RBLOCK
    (30) statement -> IF LPAREN relop RPAREN LBLOCK statement_list . RBLOCK ELSE LBLOCK statement_list RBLOCK
    (26) statement_list -> statement_list . statement SEMICOLON
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK

    RBLOCK          shift and go to state 121
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85

    statement                      shift and go to state 91

state 120

    (32) statement -> WHILE LPAREN relop RPAREN LBLOCK statement_list . RBLOCK
    (26) statement_list -> statement_list . statement SEMICOLON
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK

    RBLOCK          shift and go to state 122
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85

    statement                      shift and go to state 91

state 121

    (29) statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .
    (30) statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK . ELSE LBLOCK statement_list RBLOCK

    SEMICOLON       reduce using rule 29 (statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)
    ELSE            shift and go to state 123


state 122

    (32) statement -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .

    SEMICOLON       reduce using rule 32 (statement -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK .)


state 123

    (30) statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE . LBLOCK statement_list RBLOCK

    LBLOCK          shift and go to state 124


state 124

    (30) statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK . statement_list RBLOCK
    (26) statement_list -> . statement_list statement SEMICOLON
    (27) statement_list -> . statement SEMICOLON
    (28) statement_list -> . empty
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (69) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85
    RBLOCK          reduce using rule 69 (empty -> .)

  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! PRINT           [ reduce using rule 69 (empty -> .) ]
  ! WHILE           [ reduce using rule 69 (empty -> .) ]

    statement_list                 shift and go to state 125
    statement                      shift and go to state 81
    empty                          shift and go to state 82

state 125

    (30) statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list . RBLOCK
    (26) statement_list -> statement_list . statement SEMICOLON
    (29) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK
    (30) statement -> . IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK
    (31) statement -> . PRINT STRING
    (32) statement -> . WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK

    RBLOCK          shift and go to state 126
    IF              shift and go to state 83
    PRINT           shift and go to state 84
    WHILE           shift and go to state 85

    statement                      shift and go to state 91

state 126

    (30) statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .

    SEMICOLON       reduce using rule 30 (statement -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 30 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 118 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 118 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 118 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 124 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 124 resolved as shift
