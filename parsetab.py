
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftLESSLESSEQUALGREATERGREATEREQUALISEQUALNOTEQUALleftLESS_STRINGLESSEQUAL_STRINGGREATER_STRINGGREATEREQUAL_STRINGISEQUAL_STRINGNOTEQUAL_STRINGleftPLUSMINUSleftTIMESDIVIDErightUMINUSPLUS MINUS TIMES MODULUS DIVIDE LESS LESSEQUAL GREATER GREATEREQUAL NOTEQUAL ISEQUAL COMP OR AND NOT ASSIGN PLUS_ASSIGN MINUS_ASSIGN MULTIPLY_ASSIGN DIVIDE_ASSIGN MOD_ASSIGN POW_ASSIGN DOLLAR AT PERCENT STRING INTEGER FLOAT HEX IF PRINT ELSE WHILE FOR RETURN LESS_STRING GREATER_STRING LESSEQUAL_STRING GREATEREQUAL_STRING ISEQUAL_STRING NOTEQUAL_STRING COMP_STRING MY SUB USE PACKAGE SEMICOLON COMMA LPAREN RPAREN LBRACKET RBRACKET LBLOCK RBLOCK AMPERSANT ID\n\tprogram : declaration_list\n\t\n\tdeclaration_list : declaration_list declaration\n\t\n\tdeclaration_list : declaration\n\t\n\tdeclaration : USE ID SEMICOLON\n                | PACKAGE ID SEMICOLON\n\t\n\tdeclaration : SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK\n\t\n\tdeclaration : statement SEMICOLON\n\t\t\t\t| command\n\t\n\tparam_list : var_type comma_var_type\n\t\t\t   | empty\n\t\n\tcomma_var_type : comma_var_type COMMA var_type\n\t\t\t\t   | COMMA var_type\n\t\t\t\t   | empty\n\t\n\tvar_type : DOLLAR ID\n\t\t\t | AT ID\n\t\t\t | PERCENT ID\n\t\n\tassign_type : ASSIGN\n                | PLUS_ASSIGN\n                | MINUS_ASSIGN\n\t\t\t\t| MULTIPLY_ASSIGN\n\t\t\t\t| DIVIDE_ASSIGN\n\t\t\t\t| MOD_ASSIGN\n\t\t\t\t| POW_ASSIGN\n\t\n\tstatement_list : statement_list statement SEMICOLON\n\t\n\tstatement_list : statement SEMICOLON\n\t\n\tstatement_list : empty\n\t\n\tstatement_list : statement_list command\n\t\t\t\t\t| command\n\t\n\tstatement : var_declaration\n\t\t\t|\tvar_assignment\n\t\n\tvar_declaration : MY var_type\n\t\t\t\t| MY var_type assign_type expression\n\t\t\t\t| MY LPAREN param_list RPAREN\n\t\t\t\t| MY LPAREN param_list RPAREN assign_type expression\n\t\t\t\t| MY var_type assign_type LPAREN expression_list RPAREN\n\t\t\t\t| MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN\n\t\n\tvar_assignment : var_type assign_type expression\n\t\t\t|\tvar_type LBRACKET expression RBRACKET assign_type expression\n\t\t\t|\tvar_type assign_type LPAREN expression_list RPAREN\n\t\t\t|\tLPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN\n\t\n\tstatement : RETURN LPAREN expression_list RPAREN\n\t\n\tcommand : IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK\n\t\n\tcommand : IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK\n\t\n\tstatement : PRINT STRING\n\t\n\tcommand : WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK\n\t\n\tcommand : FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK\n\t\t\t| FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK\n\t\n\tstatement :  ID LPAREN expression_list RPAREN\n\t\t\t|\tAMPERSANT ID LPAREN expression_list RPAREN\n\t\n\texpression_list : expression comma_expression\n\t\t\t   | empty\n\t\n\tcomma_expression : comma_expression COMMA expression\n\t\t\t\t   | COMMA expression\n\t\t\t\t   | empty\n\t\n\texpression : expression PLUS expression\n\t\t\t   | expression MINUS expression\n\t\t\t   | expression TIMES expression\n\t\t\t   | expression DIVIDE expression\n\t\t\t   | expression MODULUS expression\n\t\n\texpression : INTEGER\n\t\t\t   | HEX\n\t\t\t   | FLOAT\n\t\t\t   | STRING\n\t\n\texpression : LPAREN expression RPAREN\n\t\n\texpression : ID LPAREN expression_list RPAREN %prec UMINUS\n\t\n\texpression : DOLLAR ID LBRACKET expression RBRACKET\n\t\n\texpression : var_type\n\t\n\texpression : MINUS expression %prec UMINUS\n\t\n\texpression : PLUS expression %prec UMINUS\n\t\n\trelop : relop_number\n\t\t\t|\trelop_string\n\t\n\trelop_number :\texpression ISEQUAL expression\n\t\t\t\t|\texpression NOTEQUAL expression\n\t\t\t\t|\texpression GREATER expression\n\t\t\t\t|\texpression GREATEREQUAL expression\n\t\t\t\t|\texpression LESS expression\n\t\t\t\t|\texpression LESSEQUAL expression\n\t\t\t\t|\texpression COMP expression\n\t\n\trelop : relop AND relop\n\t\t|\trelop OR relop\n\t\t|\tNOT relop\n\t\n\trelop_string :\t expression ISEQUAL_STRING expression\n\t\t\t\t|\t expression NOTEQUAL_STRING expression\n\t\t\t\t|\t expression GREATER_STRING expression\n\t\t\t\t|\t expression GREATEREQUAL_STRING expression\n\t\t\t\t|\t expression LESS_STRING expression\n\t\t\t\t|\t expression LESSEQUAL_STRING expression\n\t\t\t\t|\t expression COMP_STRING expression\n\tempty :'
    
_lr_action_items = {'USE':([0,2,3,10,24,32,53,67,192,196,200,212,213,214,],[4,4,-3,-8,-2,-7,-4,-5,-42,-45,-6,-43,-46,-47,]),'PACKAGE':([0,2,3,10,24,32,53,67,192,196,200,212,213,214,],[6,6,-3,-8,-2,-7,-4,-5,-42,-45,-6,-43,-46,-47,]),'SUB':([0,2,3,10,24,32,53,67,192,196,200,212,213,214,],[7,7,-3,-8,-2,-7,-4,-5,-42,-45,-6,-43,-46,-47,]),'RETURN':([0,2,3,10,24,32,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[13,13,-3,-8,-2,-7,-4,-5,13,13,13,13,-26,-28,13,13,-42,-27,-25,-45,-6,-24,13,13,13,13,13,13,-43,-46,-47,]),'PRINT':([0,2,3,10,24,32,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[14,14,-3,-8,-2,-7,-4,-5,14,14,14,14,-26,-28,14,14,-42,-27,-25,-45,-6,-24,14,14,14,14,14,14,-43,-46,-47,]),'ID':([0,2,3,4,6,7,10,15,21,22,23,24,26,32,33,36,37,41,42,43,44,45,46,47,48,49,53,55,59,60,65,67,74,78,83,86,88,92,93,94,95,96,97,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,149,166,170,172,176,178,180,181,182,186,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[5,5,-3,25,27,28,-8,35,50,51,52,-2,54,-7,54,54,54,54,54,-17,-18,-19,-20,-21,-22,-23,-4,54,54,54,101,-5,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,5,5,54,54,5,5,-26,-28,5,54,5,-42,-27,-25,-45,-6,-24,5,5,5,5,5,5,-43,-46,-47,]),'AMPERSANT':([0,2,3,10,24,32,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[15,15,-3,-8,-2,-7,-4,-5,15,15,15,15,-26,-28,15,15,-42,-27,-25,-45,-6,-24,15,15,15,15,15,15,-43,-46,-47,]),'IF':([0,2,3,10,24,32,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[16,16,-3,-8,-2,-7,-4,-5,16,16,16,16,-26,-28,16,16,-42,-27,-25,-45,-6,-24,16,16,16,16,16,16,-43,-46,-47,]),'WHILE':([0,2,3,10,24,32,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[17,17,-3,-8,-2,-7,-4,-5,17,17,17,17,-26,-28,17,17,-42,-27,-25,-45,-6,-24,17,17,17,17,17,17,-43,-46,-47,]),'FOR':([0,2,3,10,24,32,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[18,18,-3,-8,-2,-7,-4,-5,18,18,18,18,-26,-28,18,18,-42,-27,-25,-45,-6,-24,18,18,18,18,18,18,-43,-46,-47,]),'MY':([0,2,3,10,24,32,38,53,67,149,166,176,178,180,181,182,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[19,19,-3,-8,-2,-7,19,-4,-5,19,19,19,19,-26,-28,19,19,-42,-27,-25,-45,-6,-24,19,19,19,19,19,19,-43,-46,-47,]),'LPAREN':([0,2,3,5,10,13,16,17,18,19,24,26,28,32,33,35,36,37,38,41,42,43,44,45,46,47,48,49,53,54,55,59,60,67,74,78,83,86,88,92,93,94,95,96,97,103,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,149,166,170,172,176,178,180,181,182,183,184,186,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[8,8,-3,26,-8,33,36,37,38,40,-2,55,68,-7,55,74,55,55,8,86,55,-17,-18,-19,-20,-21,-22,-23,-4,88,55,55,55,-5,55,55,130,55,55,55,55,55,55,55,55,146,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,8,8,186,55,8,8,-26,-28,8,8,8,55,8,-42,-27,-25,-45,-6,-24,8,8,8,8,8,8,-43,-46,-47,]),'DOLLAR':([0,2,3,8,10,19,24,26,32,33,36,37,38,40,41,42,43,44,45,46,47,48,49,53,55,59,60,67,68,71,74,78,83,86,88,92,93,94,95,96,97,104,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,149,166,170,172,176,178,180,181,182,183,184,186,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[21,21,-3,21,-8,21,-2,65,-7,65,65,65,21,21,65,65,-17,-18,-19,-20,-21,-22,-23,-4,65,65,65,-5,21,21,65,65,65,65,65,65,65,65,65,65,65,21,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,21,21,65,65,21,21,-26,-28,21,21,21,65,21,-42,-27,-25,-45,-6,-24,21,21,21,21,21,21,-43,-46,-47,]),'AT':([0,2,3,8,10,19,24,26,32,33,36,37,38,40,41,42,43,44,45,46,47,48,49,53,55,59,60,67,68,71,74,78,83,86,88,92,93,94,95,96,97,104,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,149,166,170,172,176,178,180,181,182,183,184,186,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[22,22,-3,22,-8,22,-2,22,-7,22,22,22,22,22,22,22,-17,-18,-19,-20,-21,-22,-23,-4,22,22,22,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-26,-28,22,22,22,22,22,-42,-27,-25,-45,-6,-24,22,22,22,22,22,22,-43,-46,-47,]),'PERCENT':([0,2,3,8,10,19,24,26,32,33,36,37,38,40,41,42,43,44,45,46,47,48,49,53,55,59,60,67,68,71,74,78,83,86,88,92,93,94,95,96,97,104,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,149,166,170,172,176,178,180,181,182,183,184,186,190,192,194,195,196,200,202,206,207,208,209,210,211,212,213,214,],[23,23,-3,23,-8,23,-2,23,-7,23,23,23,23,23,23,23,-17,-18,-19,-20,-21,-22,-23,-4,23,23,23,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-26,-28,23,23,23,23,23,-42,-27,-25,-45,-6,-24,23,23,23,23,23,23,-43,-46,-47,]),'$end':([1,2,3,10,24,32,53,67,192,196,200,212,213,214,],[0,-1,-3,-8,-2,-7,-4,-5,-42,-45,-6,-43,-46,-47,]),'RPAREN':([8,26,29,30,31,33,40,50,51,52,56,57,58,61,62,63,64,66,68,70,72,73,74,75,76,77,80,84,85,86,88,89,91,98,99,100,101,102,105,107,111,130,132,133,135,136,138,139,140,141,142,143,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,173,174,177,186,188,189,191,197,198,199,],[-89,-89,69,-89,-10,-89,-89,-14,-15,-16,90,-89,-51,-60,-61,-62,-63,-67,-89,-9,-13,106,-89,108,-70,-71,126,131,-37,-89,-89,136,-50,-54,-69,-68,-14,145,-12,148,-81,-89,171,136,173,-64,-55,-56,-57,-58,-59,-53,-89,-11,-79,-80,-72,-73,-74,-75,-76,-77,-78,-82,-83,-84,-85,-86,-87,-88,185,-39,-65,-52,191,-89,-38,-66,-40,203,204,205,]),'SEMICOLON':([9,11,12,25,27,34,39,50,51,52,61,62,63,64,66,76,77,81,82,85,90,99,100,101,106,111,129,131,136,138,139,140,141,142,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,171,173,179,185,187,188,189,191,193,205,],[32,-29,-30,53,67,-44,-31,-14,-15,-16,-60,-61,-62,-63,-67,-70,-71,127,128,-37,-48,-69,-68,-14,-41,-81,-32,-33,-64,-55,-56,-57,-58,-59,-49,-79,-80,-72,-73,-74,-75,-76,-77,-78,-82,-83,-84,-85,-86,-87,-88,183,184,-39,-65,195,-35,-34,-38,-66,-40,202,-36,]),'STRING':([14,26,33,36,37,41,42,43,44,45,46,47,48,49,55,59,60,74,78,83,86,88,92,93,94,95,96,97,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,170,172,186,],[34,64,64,64,64,64,64,-17,-18,-19,-20,-21,-22,-23,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LBRACKET':([20,50,51,52,101,],[42,-14,-15,-16,144,]),'ASSIGN':([20,39,50,51,52,69,131,134,],[43,43,-14,-15,-16,43,43,43,]),'PLUS_ASSIGN':([20,39,50,51,52,69,131,134,],[44,44,-14,-15,-16,44,44,44,]),'MINUS_ASSIGN':([20,39,50,51,52,69,131,134,],[45,45,-14,-15,-16,45,45,45,]),'MULTIPLY_ASSIGN':([20,39,50,51,52,69,131,134,],[46,46,-14,-15,-16,46,46,46,]),'DIVIDE_ASSIGN':([20,39,50,51,52,69,131,134,],[47,47,-14,-15,-16,47,47,47,]),'MOD_ASSIGN':([20,39,50,51,52,69,131,134,],[48,48,-14,-15,-16,48,48,48,]),'POW_ASSIGN':([20,39,50,51,52,69,131,134,],[49,49,-14,-15,-16,49,49,49,]),'INTEGER':([26,33,36,37,41,42,43,44,45,46,47,48,49,55,59,60,74,78,83,86,88,92,93,94,95,96,97,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,170,172,186,],[61,61,61,61,61,61,-17,-18,-19,-20,-21,-22,-23,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'HEX':([26,33,36,37,41,42,43,44,45,46,47,48,49,55,59,60,74,78,83,86,88,92,93,94,95,96,97,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,170,172,186,],[62,62,62,62,62,62,-17,-18,-19,-20,-21,-22,-23,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FLOAT':([26,33,36,37,41,42,43,44,45,46,47,48,49,55,59,60,74,78,83,86,88,92,93,94,95,96,97,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,170,172,186,],[63,63,63,63,63,63,-17,-18,-19,-20,-21,-22,-23,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MINUS':([26,33,36,37,41,42,43,44,45,46,47,48,49,51,52,55,57,59,60,61,62,63,64,66,74,78,79,83,85,86,87,88,89,92,93,94,95,96,97,99,100,101,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,133,136,137,138,139,140,141,142,143,144,146,152,153,154,155,156,157,158,159,160,161,162,163,164,165,170,172,173,174,175,186,187,188,189,],[60,60,60,60,60,60,-17,-18,-19,-20,-21,-22,-23,-15,-16,60,93,60,60,-60,-61,-62,-63,-67,60,60,93,60,93,60,93,60,93,60,60,60,60,60,60,-69,-68,-14,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,93,60,93,-64,60,-55,-56,-57,-58,93,93,60,60,93,93,93,93,93,93,93,93,93,93,93,93,93,93,60,60,-65,93,93,60,93,93,-66,]),'PLUS':([26,33,36,37,41,42,43,44,45,46,47,48,49,51,52,55,57,59,60,61,62,63,64,66,74,78,79,83,85,86,87,88,89,92,93,94,95,96,97,99,100,101,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,133,136,137,138,139,140,141,142,143,144,146,152,153,154,155,156,157,158,159,160,161,162,163,164,165,170,172,173,174,175,186,187,188,189,],[59,59,59,59,59,59,-17,-18,-19,-20,-21,-22,-23,-15,-16,59,92,59,59,-60,-61,-62,-63,-67,59,59,92,59,92,59,92,59,92,59,59,59,59,59,59,-69,-68,-14,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,92,59,92,-64,59,-55,-56,-57,-58,92,92,59,59,92,92,92,92,92,92,92,92,92,92,92,92,92,92,59,59,-65,92,92,59,92,92,-66,]),'COMMA':([30,50,51,52,57,61,62,63,64,66,70,72,91,98,99,100,101,105,133,136,138,139,140,141,142,143,147,173,174,189,],[71,-14,-15,-16,97,-60,-61,-62,-63,-67,104,-13,137,-54,-69,-68,-14,-12,97,-64,-55,-56,-57,-58,-59,-53,-11,-65,-52,-66,]),'NOT':([36,37,78,109,110,127,128,],[78,78,78,78,78,78,78,]),'TIMES':([51,52,57,61,62,63,64,66,79,85,87,89,99,100,101,129,133,136,138,139,140,141,142,143,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,175,187,188,189,],[-15,-16,94,-60,-61,-62,-63,-67,94,94,94,94,-69,-68,-14,94,94,-64,94,94,-57,-58,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-65,94,94,94,94,-66,]),'DIVIDE':([51,52,57,61,62,63,64,66,79,85,87,89,99,100,101,129,133,136,138,139,140,141,142,143,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,175,187,188,189,],[-15,-16,95,-60,-61,-62,-63,-67,95,95,95,95,-69,-68,-14,95,95,-64,95,95,-57,-58,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-65,95,95,95,95,-66,]),'MODULUS':([51,52,57,61,62,63,64,66,79,85,87,89,99,100,101,129,133,136,138,139,140,141,142,143,152,153,154,155,156,157,158,159,160,161,162,163,164,165,173,174,175,187,188,189,],[-15,-16,96,-60,-61,-62,-63,-67,96,96,96,96,-69,-68,-14,96,96,-64,-55,-56,-57,-58,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-65,96,96,96,96,-66,]),'ISEQUAL':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,112,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'NOTEQUAL':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,113,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'GREATER':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,114,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'GREATEREQUAL':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,115,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'LESS':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,116,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'LESSEQUAL':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,117,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'COMP':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,118,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'ISEQUAL_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,119,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'NOTEQUAL_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,120,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'GREATER_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,121,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'GREATEREQUAL_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,122,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'LESS_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,123,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'LESSEQUAL_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,124,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'COMP_STRING':([51,52,61,62,63,64,66,79,99,100,101,136,138,139,140,141,142,173,189,],[-15,-16,-60,-61,-62,-63,-67,125,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,-66,]),'RBRACKET':([51,52,61,62,63,64,66,87,99,100,101,136,138,139,140,141,142,173,175,189,],[-15,-16,-60,-61,-62,-63,-67,134,-69,-68,-14,-64,-55,-56,-57,-58,-59,-65,189,-66,]),'AND':([51,52,61,62,63,64,66,75,76,77,80,99,100,101,111,136,138,139,140,141,142,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,173,189,],[-15,-16,-60,-61,-62,-63,-67,109,-70,-71,109,-69,-68,-14,-81,-64,-55,-56,-57,-58,-59,-79,109,-72,-73,-74,-75,-76,-77,-78,-82,-83,-84,-85,-86,-87,-88,109,109,-65,-66,]),'OR':([51,52,61,62,63,64,66,75,76,77,80,99,100,101,111,136,138,139,140,141,142,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,173,189,],[-15,-16,-60,-61,-62,-63,-67,110,-70,-71,110,-69,-68,-14,-81,-64,-55,-56,-57,-58,-59,-79,-80,-72,-73,-74,-75,-76,-77,-78,-82,-83,-84,-85,-86,-87,-88,110,110,-65,-66,]),'LBLOCK':([108,126,145,201,203,204,],[149,166,176,206,207,208,]),'RBLOCK':([149,166,176,178,180,181,182,190,192,194,195,196,202,206,207,208,209,210,211,212,213,214,],[-89,-89,-89,192,-26,-28,196,200,-42,-27,-25,-45,-24,-89,-89,-89,212,213,214,-43,-46,-47,]),'ELSE':([192,],[201,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,24,]),'statement':([0,2,149,166,176,178,182,190,206,207,208,209,210,211,],[9,9,179,179,179,193,193,193,179,179,179,193,193,193,]),'command':([0,2,149,166,176,178,182,190,206,207,208,209,210,211,],[10,10,181,181,181,194,194,194,181,181,181,194,194,194,]),'var_declaration':([0,2,38,149,166,176,178,182,190,206,207,208,209,210,211,],[11,11,81,11,11,11,11,11,11,11,11,11,11,11,11,]),'var_assignment':([0,2,38,149,166,176,178,182,183,184,190,206,207,208,209,210,211,],[12,12,82,12,12,12,12,12,197,198,12,12,12,12,12,12,12,]),'var_type':([0,2,8,19,26,33,36,37,38,40,41,42,55,59,60,68,71,74,78,83,86,88,92,93,94,95,96,97,104,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,149,166,170,172,176,178,182,183,184,186,190,206,207,208,209,210,211,],[20,20,30,39,66,66,66,66,20,30,66,66,66,66,66,30,105,66,66,66,66,66,66,66,66,66,66,66,147,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,20,20,66,66,20,20,20,20,20,66,20,20,20,20,20,20,20,]),'param_list':([8,40,68,],[29,84,102,]),'empty':([8,26,30,33,40,57,68,74,86,88,130,133,146,149,166,176,186,206,207,208,],[31,58,72,58,31,98,31,58,58,58,58,98,58,180,180,180,58,180,180,180,]),'assign_type':([20,39,69,131,134,],[41,83,103,170,172,]),'expression_list':([26,33,74,86,88,130,146,186,],[56,73,107,132,135,169,177,199,]),'expression':([26,33,36,37,41,42,55,59,60,74,78,83,86,88,92,93,94,95,96,97,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,137,144,146,170,172,186,],[57,57,79,79,85,87,89,99,100,57,79,129,133,57,138,139,140,141,142,143,79,79,152,153,154,155,156,157,158,159,160,161,162,163,164,165,79,79,133,174,175,57,187,188,133,]),'comma_var_type':([30,],[70,]),'relop':([36,37,78,109,110,127,128,],[75,80,111,150,151,167,168,]),'relop_number':([36,37,78,109,110,127,128,],[76,76,76,76,76,76,76,]),'relop_string':([36,37,78,109,110,127,128,],[77,77,77,77,77,77,77,]),'comma_expression':([57,133,],[91,91,]),'statement_list':([149,166,176,206,207,208,],[178,182,190,209,210,211,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','perl_parser.py',23),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_program_declaration_list','perl_parser.py',29),
  ('declaration_list -> declaration','declaration_list',1,'p_program_declaration','perl_parser.py',35),
  ('declaration -> USE ID SEMICOLON','declaration',3,'p_declaration_import','perl_parser.py',41),
  ('declaration -> PACKAGE ID SEMICOLON','declaration',3,'p_declaration_import','perl_parser.py',42),
  ('declaration -> SUB ID LPAREN param_list RPAREN LBLOCK statement_list RBLOCK','declaration',8,'p_declaration_function','perl_parser.py',48),
  ('declaration -> statement SEMICOLON','declaration',2,'p_declaration_statement','perl_parser.py',54),
  ('declaration -> command','declaration',1,'p_declaration_statement','perl_parser.py',55),
  ('param_list -> var_type comma_var_type','param_list',2,'p_param_list','perl_parser.py',61),
  ('param_list -> empty','param_list',1,'p_param_list','perl_parser.py',62),
  ('comma_var_type -> comma_var_type COMMA var_type','comma_var_type',3,'p_comma_var_type','perl_parser.py',68),
  ('comma_var_type -> COMMA var_type','comma_var_type',2,'p_comma_var_type','perl_parser.py',69),
  ('comma_var_type -> empty','comma_var_type',1,'p_comma_var_type','perl_parser.py',70),
  ('var_type -> DOLLAR ID','var_type',2,'p_var_type','perl_parser.py',75),
  ('var_type -> AT ID','var_type',2,'p_var_type','perl_parser.py',76),
  ('var_type -> PERCENT ID','var_type',2,'p_var_type','perl_parser.py',77),
  ('assign_type -> ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',83),
  ('assign_type -> PLUS_ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',84),
  ('assign_type -> MINUS_ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',85),
  ('assign_type -> MULTIPLY_ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',86),
  ('assign_type -> DIVIDE_ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',87),
  ('assign_type -> MOD_ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',88),
  ('assign_type -> POW_ASSIGN','assign_type',1,'p_assign_type','perl_parser.py',89),
  ('statement_list -> statement_list statement SEMICOLON','statement_list',3,'p_statement_list','perl_parser.py',95),
  ('statement_list -> statement SEMICOLON','statement_list',2,'p_statement_list_statement','perl_parser.py',101),
  ('statement_list -> empty','statement_list',1,'p_statement_list_empty','perl_parser.py',107),
  ('statement_list -> statement_list command','statement_list',2,'p_statement_list_command','perl_parser.py',113),
  ('statement_list -> command','statement_list',1,'p_statement_list_command','perl_parser.py',114),
  ('statement -> var_declaration','statement',1,'p_statement_var','perl_parser.py',120),
  ('statement -> var_assignment','statement',1,'p_statement_var','perl_parser.py',121),
  ('var_declaration -> MY var_type','var_declaration',2,'p_statement_var_declaration','perl_parser.py',127),
  ('var_declaration -> MY var_type assign_type expression','var_declaration',4,'p_statement_var_declaration','perl_parser.py',128),
  ('var_declaration -> MY LPAREN param_list RPAREN','var_declaration',4,'p_statement_var_declaration','perl_parser.py',129),
  ('var_declaration -> MY LPAREN param_list RPAREN assign_type expression','var_declaration',6,'p_statement_var_declaration','perl_parser.py',130),
  ('var_declaration -> MY var_type assign_type LPAREN expression_list RPAREN','var_declaration',6,'p_statement_var_declaration','perl_parser.py',131),
  ('var_declaration -> MY LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN','var_declaration',8,'p_statement_var_declaration','perl_parser.py',132),
  ('var_assignment -> var_type assign_type expression','var_assignment',3,'p_statement_var_assignment','perl_parser.py',138),
  ('var_assignment -> var_type LBRACKET expression RBRACKET assign_type expression','var_assignment',6,'p_statement_var_assignment','perl_parser.py',139),
  ('var_assignment -> var_type assign_type LPAREN expression_list RPAREN','var_assignment',5,'p_statement_var_assignment','perl_parser.py',140),
  ('var_assignment -> LPAREN param_list RPAREN assign_type LPAREN expression_list RPAREN','var_assignment',7,'p_statement_var_assignment','perl_parser.py',141),
  ('statement -> RETURN LPAREN expression_list RPAREN','statement',4,'p_statement_return','perl_parser.py',147),
  ('command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK','command',7,'p_command_if','perl_parser.py',153),
  ('command -> IF LPAREN relop RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK','command',11,'p_command_if_else','perl_parser.py',159),
  ('statement -> PRINT STRING','statement',2,'p_statement_print','perl_parser.py',165),
  ('command -> WHILE LPAREN relop RPAREN LBLOCK statement_list RBLOCK','command',7,'p_command_while','perl_parser.py',171),
  ('command -> FOR LPAREN var_declaration SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK','command',11,'p_command_for','perl_parser.py',177),
  ('command -> FOR LPAREN var_assignment SEMICOLON relop SEMICOLON var_assignment RPAREN LBLOCK statement_list RBLOCK','command',11,'p_command_for','perl_parser.py',178),
  ('statement -> ID LPAREN expression_list RPAREN','statement',4,'p_statement_call','perl_parser.py',184),
  ('statement -> AMPERSANT ID LPAREN expression_list RPAREN','statement',5,'p_statement_call','perl_parser.py',185),
  ('expression_list -> expression comma_expression','expression_list',2,'p_expression_list','perl_parser.py',191),
  ('expression_list -> empty','expression_list',1,'p_expression_list','perl_parser.py',192),
  ('comma_expression -> comma_expression COMMA expression','comma_expression',3,'p_comma_expression','perl_parser.py',198),
  ('comma_expression -> COMMA expression','comma_expression',2,'p_comma_expression','perl_parser.py',199),
  ('comma_expression -> empty','comma_expression',1,'p_comma_expression','perl_parser.py',200),
  ('expression -> expression PLUS expression','expression',3,'p_expression','perl_parser.py',205),
  ('expression -> expression MINUS expression','expression',3,'p_expression','perl_parser.py',206),
  ('expression -> expression TIMES expression','expression',3,'p_expression','perl_parser.py',207),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','perl_parser.py',208),
  ('expression -> expression MODULUS expression','expression',3,'p_expression','perl_parser.py',209),
  ('expression -> INTEGER','expression',1,'p_datatype_expression','perl_parser.py',215),
  ('expression -> HEX','expression',1,'p_datatype_expression','perl_parser.py',216),
  ('expression -> FLOAT','expression',1,'p_datatype_expression','perl_parser.py',217),
  ('expression -> STRING','expression',1,'p_datatype_expression','perl_parser.py',218),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_on_paren_expression','perl_parser.py',224),
  ('expression -> ID LPAREN expression_list RPAREN','expression',4,'p_call_expression','perl_parser.py',230),
  ('expression -> DOLLAR ID LBRACKET expression RBRACKET','expression',5,'p_expression_array_access','perl_parser.py',235),
  ('expression -> var_type','expression',1,'p_var_type_expression','perl_parser.py',242),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus_minus','perl_parser.py',247),
  ('expression -> PLUS expression','expression',2,'p_expression_uminus_plus','perl_parser.py',253),
  ('relop -> relop_number','relop',1,'p_relop','perl_parser.py',259),
  ('relop -> relop_string','relop',1,'p_relop','perl_parser.py',260),
  ('relop_number -> expression ISEQUAL expression','relop_number',3,'p_relop_number','perl_parser.py',266),
  ('relop_number -> expression NOTEQUAL expression','relop_number',3,'p_relop_number','perl_parser.py',267),
  ('relop_number -> expression GREATER expression','relop_number',3,'p_relop_number','perl_parser.py',268),
  ('relop_number -> expression GREATEREQUAL expression','relop_number',3,'p_relop_number','perl_parser.py',269),
  ('relop_number -> expression LESS expression','relop_number',3,'p_relop_number','perl_parser.py',270),
  ('relop_number -> expression LESSEQUAL expression','relop_number',3,'p_relop_number','perl_parser.py',271),
  ('relop_number -> expression COMP expression','relop_number',3,'p_relop_number','perl_parser.py',272),
  ('relop -> relop AND relop','relop',3,'p_relop_binary','perl_parser.py',278),
  ('relop -> relop OR relop','relop',3,'p_relop_binary','perl_parser.py',279),
  ('relop -> NOT relop','relop',2,'p_relop_binary','perl_parser.py',280),
  ('relop_string -> expression ISEQUAL_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',286),
  ('relop_string -> expression NOTEQUAL_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',287),
  ('relop_string -> expression GREATER_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',288),
  ('relop_string -> expression GREATEREQUAL_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',289),
  ('relop_string -> expression LESS_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',290),
  ('relop_string -> expression LESSEQUAL_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',291),
  ('relop_string -> expression COMP_STRING expression','relop_string',3,'p_relop_string','perl_parser.py',292),
  ('empty -> <empty>','empty',0,'p_empty','perl_parser.py',297),
]
